# CDN Server Configuration for Active Storage Files
# Generic solution for serving static files from /var/storage/{app-name}/active_storage/
# Domain: cdn.webet.pl
#
# This configuration serves Active Storage files directly from nginx,
# bypassing Rails for improved performance and reduced server load.
#
# URL Pattern: https://cdn.webet.pl/{app-name}/blobs/{key}
# File Path: /var/storage/{app-name}/active_storage/{key}

# HTTP server - redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name cdn.webet.pl;

    # Allow certbot challenges for SSL certificate
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server - CDN file serving
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name cdn.webet.pl;

    # SSL certificates from Let's Encrypt
    ssl_certificate /etc/letsencrypt/live/cdn.webet.pl/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cdn.webet.pl/privkey.pem;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # CORS headers for CDN (allow all origins for public assets)
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept" always;
    add_header Access-Control-Max-Age 3600 always;

    # Logging
    access_log /var/log/nginx/cdn-access.log;
    error_log /var/log/nginx/cdn-error.log;

    # Root directory for storage
    root /var/storage;

    # Main location block for serving Active Storage blobs
    # URL: https://cdn.webet.pl/{app-name}/blobs/{key}
    # Maps to: /var/storage/{app-name}/active_storage/{key}
    location ~ ^/([^/]+)/blobs/(.+)$ {
        # Extract app-name and blob key from URL
        set $app_name $1;
        set $blob_key $2;

        # Construct file path
        alias /var/storage/$app_name/active_storage/$blob_key;

        # Enable gzip compression for supported file types
        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types text/plain text/css text/xml text/javascript
                   application/json application/javascript application/xml+rss
                   application/rss+xml font/truetype font/opentype
                   application/vnd.ms-fontobject image/svg+xml;

        # Cache control headers
        # Images and assets should be cached aggressively since they're immutable
        expires 1y;
        add_header Cache-Control "public, immutable" always;

        # Re-add CORS headers (nginx doesn't inherit add_header in nested locations)
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Handle OPTIONS preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept" always;
            add_header Access-Control-Max-Age 3600 always;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        # Serve the file directly
        try_files $uri =404;

        # Disable access logging for successful requests (optional, reduces I/O)
        # access_log off;
    }

    # Alternative location for variant blobs (thumbnails, resized images, etc.)
    # URL: https://cdn.webet.pl/{app-name}/variants/{key}
    # Maps to: /var/storage/{app-name}/active_storage/{key}
    location ~ ^/([^/]+)/variants/(.+)$ {
        set $app_name $1;
        set $variant_key $2;

        alias /var/storage/$app_name/active_storage/$variant_key;

        # Enable gzip compression
        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types text/plain text/css text/xml text/javascript
                   application/json application/javascript application/xml+rss
                   application/rss+xml font/truetype font/opentype
                   application/vnd.ms-fontobject image/svg+xml;

        # Cache control headers
        expires 1y;
        add_header Cache-Control "public, immutable" always;

        # Re-add CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Handle OPTIONS
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept" always;
            add_header Access-Control-Max-Age 3600 always;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        try_files $uri =404;
    }

    # Health check endpoint
    location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "CDN OK\n";
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Return 404 for all other requests
    location / {
        return 404;
    }
}

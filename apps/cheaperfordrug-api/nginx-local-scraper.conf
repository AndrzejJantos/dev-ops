# Local Scraper Access Configuration
# This allows the scraper on the same machine to communicate with the API
# using http://api-scraper.localtest.me:4100
#
# Installation on production server:
# 1. sudo cp nginx-local-scraper.conf /etc/nginx/sites-available/api-scraper-local
# 2. sudo ln -s /etc/nginx/sites-available/api-scraper-local /etc/nginx/sites-enabled/
# 3. sudo nginx -t
# 4. sudo systemctl reload nginx

upstream api_scraper_local_backend {
    least_conn;
    server 127.0.0.1:3020;
    server 127.0.0.1:3021;
}

# HTTP server - Local scraper access on port 4100
server {
    listen 4100;
    listen [::]:4100;

    # Accept requests for these hostnames
    server_name localhost api-scraper.localtest.me;

    # Logging
    access_log /var/log/nginx/api-scraper-local-access.log;
    error_log /var/log/nginx/api-scraper-local-error.log;

    # Health check endpoint
    location /up {
        proxy_pass http://api_scraper_local_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        access_log off;
    }

    # Proxy all requests to Rails backend
    location / {
        proxy_pass http://api_scraper_local_backend;
        proxy_http_version 1.1;

        # IMPORTANT: Preserve the original Host header
        # Rails routing depends on subdomain "api-scraper"
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto http;

        # Timeouts for scraper operations
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # Client body size limit (for batch scraper uploads)
    client_max_body_size 50M;
}
